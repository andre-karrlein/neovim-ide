{
	"name": "remote-containers",
	"displayName": "Remote - Containers",
	"description": "Open any folder inside (or mounted into) a container and take advantage of Visual Studio Code's full feature set.",
	"version": "0.48.0",
	"preview": true,
	"publisher": "ms-vscode-remote",
	"icon": "resources/remote-containers.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-remote-release.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-remote-release"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"engines": {
		"vscode": "^1.34.0"
	},
	"extensionKind": "ui",
	"categories": [
		"Other"
	],
	"keywords": [
		"remote",
		"docker",
		"containers",
		"remote development",
		"dev container",
		"development container"
	],
	"activationEvents": [
		"onCommand:openindocker.reopenInContainer",
		"onCommand:openindocker.reopenLocally",
		"onCommand:openindocker.openFolder",
		"onCommand:openindocker.attachToRunningContainer",
		"onCommand:openindocker.attachToRunningContainerFromViewlet",
		"onCommand:openindocker.rebuildContainer",
		"onCommand:openindocker.createDevContainerFile",
		"onCommand:openindocker.forwardPort",
		"onCommand:openindocker.openDevContainerFile",
		"onCommand:openindocker.gitCredential",
		"onCommand:openindocker.settings",
		"onCommand:openindocker.getHelp",
		"onCommand:openindocker.getStarted",
		"onCommand:openindocker.trySample",
		"onCommand:openindocker.reportIssue",
		"onCommand:openindocker.provideFeedback",
		"workspaceContains:.devcontainer/devcontainer.json",
		"workspaceContains:.devcontainer.json",
		"onResolveRemoteAuthority:dev-container",
		"onResolveRemoteAuthority:attached-container",
		"onDebugResolve:extensionHost"
	],
	"main": "./dist/extension",
	"enableProposedApi": true,
	"contributes": {
		"configuration": {
			"title": "Remote - Containers",
			"properties": {
				"remote.containers.defaultExtensions": {
					"type": "array",
					"description": "Configures the list of extensions to always install while creating a container.",
					"default": [],
					"items": {
						"type": "string",
						"pattern": "([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)",
						"errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
					}
				}
			}
		},
		"commands": [
			{
				"command": "openindocker.reopenInContainer",
				"title": "Reopen Folder in Container",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.reopenLocally",
				"title": "Reopen Folder Locally",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.openFolder",
				"title": "Open Folder in Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.attachToRunningContainer",
				"title": "Attach to Running Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.attachToRunningContainerFromViewlet",
				"title": "Attach Visual Studio Code",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.rebuildContainer",
				"title": "Rebuild Container",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.createDevContainerFile",
				"title": "Create Container Configuration File...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.forwardPort",
				"title": "Forward Port from Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.settings",
				"title": "Settings",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.getHelp",
				"title": "Help",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.getStarted",
				"title": "Getting Started",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.trySample",
				"title": "Try a Sample...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.reportIssue",
				"title": "Report Issue...",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.provideFeedback",
				"title": "Provide Feedback",
				"category": "Remote-Containers"
			},
			{
				"command": "openindocker.openDevContainerFile",
				"title": "Open Container Configuration File...",
				"category": "Remote-Containers"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "openindocker.reopenInContainer",
					"when": "workspaceFolderCount != 0 && remoteAuthority =~ /^$/"
				},
				{
					"command": "openindocker.reopenLocally",
					"when": "remoteAuthority =~ /^dev-container\\+.*$/"
				},
				{
					"command": "openindocker.openFolder",
					"when": "remoteAuthority =~ /^((dev|attached)-container\\+.*)?$/"
				},
				{
					"command": "openindocker.attachToRunningContainer",
					"when": "remoteAuthority =~ /^((dev|attached)-container\\+.*)?$/"
				},
				{
					"command": "openindocker.attachToRunningContainerFromViewlet",
					"when": "false"
				},
				{
					"command": "openindocker.rebuildContainer",
					"when": "remoteAuthority =~ /^dev-container\\+.*$/"
				},
				{
					"command": "openindocker.createDevContainerFile",
					"when": "workspaceFolderCount != 0 && remoteAuthority =~ /^$/"
				},
				{
					"command": "openindocker.openDevContainerFile",
					"when": "workspaceFolderCount != 0 && remoteAuthority =~ /^$/"
				},
				{
					"command": "openindocker.forwardPort",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.getStarted",
					"when": "false"
				},
				{
					"command": "openindocker.trySample",
					"when": "!remoteAuthority"
				},
				{
					"command": "openindocker.provideFeedback",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				}
			],
			"statusBar/windowIndicator": [
				{
					"command": "openindocker.reopenInContainer",
					"group": "2_local_containers_actions@1",
					"when": "workspaceFolderCount != 0 && !remoteAuthority"
				},
				{
					"command": "openindocker.openFolder",
					"group": "2_local_containers_actions@2",
					"when": "!remoteAuthority"
				},
				{
					"command": "openindocker.attachToRunningContainer",
					"group": "2_local_containers_actions@3",
					"when": "!remoteAuthority"
				},
				{
					"command": "openindocker.createDevContainerFile",
					"group": "2_local_containers_actions@4",
					"when": "workspaceFolderCount != 0 && remoteAuthority =~ /^$/"
				},
				{
					"command": "openindocker.trySample",
					"group": "2_local_containers_actions@5",
					"when": "!remoteAuthority"
				},
				{
					"command": "openindocker.getStarted",
					"group": "2_local_containers_actions@6",
					"when": "!remoteAuthority"
				},
				{
					"command": "openindocker.reopenLocally",
					"group": "1_remote_containers_actions@1",
					"when": "remoteAuthority =~ /^dev-container\\+.*$/"
				},
				{
					"command": "openindocker.rebuildContainer",
					"group": "1_remote_containers_actions@2",
					"when": "remoteAuthority =~ /^dev-container\\+.*$/"
				},
				{
					"command": "openindocker.forwardPort",
					"group": "1_remote_containers_actions@3",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.openFolder",
					"group": "1_remote_containers_actions@4",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.attachToRunningContainer",
					"group": "1_remote_containers_actions@5",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.settings",
					"group": "9_remote_containers_help@1",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.reportIssue",
					"group": "9_remote_containers_help@2",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.provideFeedback",
					"group": "9_remote_containers_help@3",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				},
				{
					"command": "openindocker.getHelp",
					"group": "9_remote_containers_help@4",
					"when": "remoteAuthority =~ /^(dev|attached)-container\\+.*$/"
				}
			],
			"view/item/context": [
				{
					"command": "openindocker.attachToRunningContainerFromViewlet",
					"when": "view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode)$/"
				}
			]
		},
		"languages": [
			{
				"id": "jsonc",
				"filenamePatterns": [
					"**/.devcontainer/devcontainer.json",
					"**/.devcontainer.json"
				]
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "vscode-remote",
				"authority": "dev-container+*",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"tildify": true,
					"workspaceSuffix": "Dev Container"
				}
			},
			{
				"scheme": "vscode-remote",
				"authority": "attached-container+*",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"tildify": true,
					"workspaceSuffix": "Attached Container"
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm-run-all clean definitions compile-prod",
		"compile": "npm-run-all clean definitions compile-dev",
		"watch": "npm-run-all clean definitions compile-watch",
		"precommit": "node build/gulpfile.hygiene.js",
		"package": "vsce package --yarn",
		"definitions": "npm-run-all clean definitions-mkdir definitions-tar",
		"lint": "tslint -p .",
		"compile-prod": "webpack --mode production",
		"compile-dev": "webpack --mode none",
		"compile-watch": "webpack --mode none --watch",
		"definitions-mkdir": "mkdirp dist/node_modules/vscode-dev-containers",
		"definitions-tar": "tar -xf vscode-dev-containers-*.tgz -C dist/node_modules/vscode-dev-containers --strip 1",
		"clean": "rimraf dist"
	},
	"devDependencies": {
		"@types/dockerode": "^2.5.9",
		"@types/follow-redirects": "^1.5.0",
		"@types/js-yaml": "^3.12.1",
		"@types/markdown-it": "^0.0.7",
		"@types/mkdirp": "^0.5.1",
		"@types/node": "^8.10.25",
		"@types/webpack": "^4.4.26",
		"copy-webpack-plugin": "^5.0.2",
		"event-stream": "^4.0.1",
		"gulp": "^4.0.0",
		"gulp-filter": "^5.1.0",
		"husky": "^1.3.1",
		"npm-run-all": "^4.1.5",
		"p-all": "^2.1.0",
		"ts-loader": "^5.3.3",
		"tslint": "^5.15.0",
		"typescript": "^3.4.1",
		"typescript-formatter": "^7.2.2",
		"vinyl": "^2.2.0",
		"vinyl-fs": "^3.0.3",
		"vsce": "^1.59.0",
		"vscode": "^1.1.33",
		"vscode-nls-dev": "^3.2.6",
		"webpack": "^4.29.6",
		"webpack-cli": "^3.3.0"
	},
	"dependencies": {
		"dockerode": "^2.5.7",
		"follow-redirects": "^1.7.0",
		"js-yaml": "^3.13.1",
		"jsonc-parser": "^2.0.2",
		"markdown-it": "^8.4.2",
		"mkdirp": "^0.5.1"
	},
	"__metadata": {
		"id": "93ce222b-5f6f-49b7-9ab1-a0463c6238df",
		"publisherId": "ac9410a2-0d75-40ec-90de-b59bb705801d",
		"publisherDisplayName": "Microsoft"
	}
}