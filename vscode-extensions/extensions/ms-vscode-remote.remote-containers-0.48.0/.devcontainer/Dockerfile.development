FROM consol/ubuntu-xfce-vnc

USER root

RUN apt-get update \
	&& apt-get install -y \
		sudo \
		curl \
		make \
		gcc \
		g++ \
		python2.7 \
		libx11-dev \
		libxkbfile-dev \
		libsecret-1-dev \
		xz-utils \
		git \
		zsh \
		language-pack-en \
		software-properties-common \
		apt-transport-https \
		lsb-release \
		dirmngr \
# Docker repository.
	&& curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
	&& add-apt-repository \
		"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
		$(lsb_release -cs) \
		stable" \
# Azure CLI repository.
	&& echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" >/etc/apt/sources.list.d/azure-cli.list \
	&& apt-key --keyring /etc/apt/trusted.gpg.d/Microsoft.gpg adv \
		--keyserver packages.microsoft.com \
		--recv-keys BC528686B50D79E339D3721CEB3E94ADBE1229CF \
	&& apt-get update \
	&& apt-get install -y \
		docker-ce \
		azure-cli \
	&& rm -rf /var/lib/apt/lists/*

RUN curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
RUN chmod +x /usr/local/bin/docker-compose

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8

RUN chsh -s /bin/zsh

RUN useradd \
	--uid 1000 \
	--gid 0 \
	--groups sudo \
	--home-dir $HOME \
	--shell /bin/zsh \
	--no-create-home \
	--no-user-group \
	headless
RUN chown headless /headless
RUN echo "headless ALL=(ALL) NOPASSWD:ALL" >/etc/sudoers.d/headless && chmod 0440 /etc/sudoers.d/headless

COPY settings.json /headless/.vscode-remote/data/User/settings.json
RUN mkdir -p /headless/.vscode-remote/bin
RUN chown -R headless /headless/.vscode-remote

USER headless

SHELL ["/bin/zsh", "-c"]
ENV SHELL /bin/zsh
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
RUN git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
RUN sed -ie 's/^plugins=(/\0zsh-autosuggestions /' ~/.zshrc

RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
RUN echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.zshenv
RUN echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm' >> ~/.zshenv
RUN nvm install 10.15.1
RUN npm install -g yarn vsce yo generator-code
