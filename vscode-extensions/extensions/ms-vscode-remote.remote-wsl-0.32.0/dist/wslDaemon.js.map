{"version":3,"sources":["../webpack/bootstrap","../external \"fs\"","../external \"path\"","../external \"os\"","../external \"child_process\"",".././src/utils.ts",".././src/wslDaemon.ts","../external \"net\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","path","os","fs","product","getWSLExecutablePath","useWSLexe","osVersion","exec","release","buildNumber","length","parseInt","getWindowsBuildNumber","is32ProcessOn64Windows","process","env","systemRoot","join","getProductConfiguration","appRoot","content","readFileSync","toString","JSON","parse","net","cp","utils_1","AGENT_DEBUG_PORT","PIPE_NAME","EXT_HOST_PID","VSCODE_WSL_EXT_LOCATION","VSCODE_WSL_APP_ROOT","VSCODE_WSL_ENABLE_TELEMETRY","ProgressMessage","[object Object]","increment","message","this","type","StdoutMessage","data","StderrMessage","PortResolvedMessage","ipAddresses","port","FatalErrorOccuredMessage","finalResult","customers","removeCustomer","customer","splice","exit","msg","stdout","write","stringify","push","timer","setInterval","kill","e","clearInterval","server","createServer","clientSocket","protocol","SimpleProtocol","send","onMessage","Error","on","onServerError","err","code","console","error","errorHandler","socket","createConnection","removeListener","sendToAll","once","forEach","listen","lastProgressLine","lastProgressPercentage","lastProgressReportMessage","handleError","clearTimeout","observeOutput","completed","hasUpdates","idleCount","isFirstUpdate","INACTIVITY_LIMIT","Math","floor","output","chr","charCodeAt","match","match2","substr","charAt","newProgressPercentage","min","detectServerStarted","stderr","wslPath","existsSync","commit","quality","inspect","commandLine","commandArgs","endsWith","extHostProcess","spawn","cwd","windowsVerbatimArguments","_","onClose","_byteProtocol","ByteProtocol","Buffer","from","_socket","_writeBuffer","_data","_totalLength","head","body","wasEmpty","ret","concat","_chunks","totalLength","state","readHead","bodyLen","_socketDataListener","_headerLen","all","readUInt32BE","rest","slice","buffer","_socketCloseListener","header","allocUnsafe","writeUInt32BE","_writeSoon","add","setImmediate","destroyed","take"],"mappings":"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","file":"wslDaemon.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"os\");","module.exports = require(\"child_process\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport * as os from 'os';\nimport * as fs from 'fs';\n\nexport function getWSLExecutablePath(): string | undefined {\n\tlet useWSLexe = getWindowsBuildNumber() >= 16299;\n\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst systemRoot = process.env['SystemRoot'];\n\tif (systemRoot) {\n\t\treturn path.join(systemRoot, is32ProcessOn64Windows ? 'Sysnative' : 'System32', useWSLexe ? 'wsl.exe' : 'bash.exe');\n\t}\n\treturn undefined;\n\n}\n\nfunction getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport interface IProductConfiguration {\n\tcommit: string;\n\tquality: string;\n}\n\nlet product: IProductConfiguration;\n\nexport function getProductConfiguration(appRoot: string): IProductConfiguration {\n\tif (!product) {\n\t\tconst content = fs.readFileSync(path.join(appRoot, 'product.json')).toString();\n\t\tproduct = JSON.parse(content) as IProductConfiguration;\n\t}\n\treturn product;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\nimport * as cp from 'child_process';\nimport * as fs from 'fs';\nimport { getWSLExecutablePath, getProductConfiguration } from './utils';\n\nconst POLLING_TIME = 300;\nconst INACTIVITY_LIMIT = 90000; // timeout in ms\nconst AGENT_DEBUG_PORT = process.env['VSCODE_WSL_AGENT_DEBUG_PORT'];\nconst PIPE_NAME = process.env['VSCODE_WSL_PIPE_NAME']!;\nconst EXT_HOST_PID = parseInt(process.env['VSCODE_WSL_EXT_HOST_PID'] || '0', 10);\nconst VSCODE_WSL_EXT_LOCATION = process.env['VSCODE_WSL_EXT_LOCATION']!;\nconst VSCODE_WSL_APP_ROOT = process.env['VSCODE_WSL_APP_ROOT']!;\nconst VSCODE_WSL_ENABLE_TELEMETRY = process.env['VSCODE_WSL_ENABLE_TELEMETRY'] || false;\n\nexport class ProgressMessage {\n\tpublic readonly type = 'progressMessage';\n\tconstructor(\n\t\tpublic readonly increment: number,\n\t\tpublic readonly message: string\n\t) { }\n}\nexport class StdoutMessage {\n\tpublic readonly type = 'stdoutMessage';\n\tconstructor(\n\t\tpublic readonly data: string\n\t) { }\n}\nexport class StderrMessage {\n\tpublic readonly type = 'stderrMessage';\n\tconstructor(\n\t\tpublic readonly data: string\n\t) { }\n}\nexport class PortResolvedMessage {\n\tpublic readonly type = 'portResolved';\n\tconstructor(\n\t\tpublic readonly ipAddresses: string[],\n\t\tpublic readonly port: number\n\t) { }\n}\nexport class FatalErrorOccuredMessage {\n\tpublic readonly type = 'fatalErrorOccured';\n\tconstructor(\n\t\tpublic readonly message: string\n\t) { }\n}\nexport type ServerToClientMessage = ProgressMessage | StdoutMessage | StderrMessage | PortResolvedMessage | FatalErrorOccuredMessage;\n\ninterface ICustomer {\n\tsend(msg: ServerToClientMessage): void;\n}\n\nlet finalResult: PortResolvedMessage | FatalErrorOccuredMessage | null = null;\nlet customers: ICustomer[] = [];\n\nfunction removeCustomer(customer: ICustomer) {\n\tfor (let i = 0; i < customers.length; i++) {\n\t\tif (customers[i] === customer) {\n\t\t\tcustomers.splice(i, 1);\n\t\t}\n\t}\n\n\tif (customers.length === 0) {\n\t\t// no more customers => exit\n\t\tprocess.exit(0);\n\t}\n}\n\n(function () {\n\t// Handle the local customer\n\n\tconst customer = new class implements ICustomer {\n\t\tsend(msg: ServerToClientMessage) {\n\t\t\tprocess.stdout.write(JSON.stringify(msg) + '\\n');\n\t\t}\n\t};\n\n\tcustomers.push(customer);\n\n\tlet timer = setInterval(function () {\n\t\ttry {\n\t\t\tprocess.kill(EXT_HOST_PID, 0); // throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\t// the local customer does not exist anymore\n\t\t\tclearInterval(timer);\n\t\t\tremoveCustomer(customer);\n\t\t}\n\t}, 1000);\n})();\n\nconst server = net.createServer((clientSocket: net.Socket) => {\n\tconst protocol = new SimpleProtocol(clientSocket);\n\tconst customer = new class implements ICustomer {\n\t\tsend(msg: ServerToClientMessage) {\n\t\t\tprotocol.send(msg);\n\t\t}\n\t};\n\tcustomers.push(customer);\n\n\tprotocol.onMessage = () => {\n\t\tthrow new Error(`Received unexpected message`);\n\t};\n\n\tif (finalResult) {\n\t\t// Everything finished, result ready\n\t\tcustomer.send(finalResult);\n\t}\n\n\tclientSocket.on('close', () => {\n\t\t// customer lost\n\t\tremoveCustomer(customer);\n\t});\n});\n\nfunction onServerError(err: any) {\n\tif (!err || err.code !== 'EADDRINUSE') {\n\t\t// some very bad error occured\n\t\tconsole.error(err);\n\t\tprocess.exit(0);\n\t}\n\n\t// This means there is already a daemon running, so let's connect to it\n\tlet errorHandler = (err: any) => {\n\t\t// could not connect to the socket\n\t\tconsole.error(err);\n\t\tprocess.exit(0);\n\t};\n\tlet socket = net.createConnection(PIPE_NAME, () => {\n\t\tsocket.removeListener('error', errorHandler);\n\t\tlet protocol = new SimpleProtocol(socket);\n\t\tprotocol.onMessage = (msg) => {\n\t\t\t// print message locally\n\t\t\tsendToAll(msg);\n\t\t};\n\t\tsocket.on('close', () => {\n\t\t\t// Nothing to do...\n\t\t\tprocess.exit(0);\n\t\t});\n\t});\n\tsocket.once('error', errorHandler);\n}\n\nfunction sendToAll(message: ServerToClientMessage): void {\n\tcustomers.forEach((customer) => {\n\t\tcustomer.send(message);\n\t});\n}\n\nserver.on('error', onServerError);\nserver.listen(PIPE_NAME, () => {\n\tserver.removeListener('error', onServerError);\n\n\tlet timer: NodeJS.Timer;\n\tlet lastProgressLine = '';\n\tlet lastProgressPercentage = 0;\n\tlet lastProgressReportMessage = '';\n\tlet ipAddresses: string[] = [];\n\n\tconst handleError = (message: string) => {\n\t\tclearTimeout(timer);\n\t\tfinalResult = new FatalErrorOccuredMessage(message);\n\t\tsendToAll(finalResult);\n\t};\n\n\tconst detectServerStarted = (output: string) => {\n\t\tconst enum CharCode {\n\t\t\tBackspace = 8,\n\t\t\tLineFeed = 10\n\t\t}\n\n\t\tfor (let i = 0; i < output.length; i++) {\n\t\t\tconst chr = output.charCodeAt(i);\n\t\t\tif (chr === CharCode.LineFeed) {\n\t\t\t\tconst match = lastProgressLine.match(/Extension host agent listening on (\\d+)/);\n\t\t\t\tif (match) {\n\t\t\t\t\t// success!\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\tfinalResult = new PortResolvedMessage(ipAddresses, parseInt(match[1], 10));\n\t\t\t\t\tsendToAll(finalResult);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconst match2 = lastProgressLine.match(/IP Address: ([\\d\\.]+)/);\n\t\t\t\tif (match2) {\n\t\t\t\t\tipAddresses.push(match2[1]);\n\t\t\t\t}\n\t\t\t\tlastProgressLine = '';\n\t\t\t} else if (chr === CharCode.Backspace) {\n\t\t\t\tlastProgressLine = lastProgressLine.substr(0, lastProgressLine.length - 1);\n\t\t\t} else {\n\t\t\t\tlastProgressLine += output.charAt(i);\n\t\t\t}\n\t\t}\n\n\t\tconst match = lastProgressLine.match(/(\\d+)%$/);\n\t\tlet increment = 0;\n\t\tif (match) {\n\t\t\tconst newProgressPercentage = Math.min(parseInt(match[1], 10), 100);\n\t\t\tif (newProgressPercentage > lastProgressPercentage) {\n\t\t\t\tincrement = newProgressPercentage - lastProgressPercentage;\n\t\t\t\tlastProgressPercentage = newProgressPercentage;\n\t\t\t}\n\t\t}\n\t\tconst message = lastProgressLine;\n\t\tif (lastProgressReportMessage !== message || increment > 0) {\n\t\t\tlastProgressReportMessage = message;\n\t\t\tsendToAll(new ProgressMessage(increment, message));\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst observeOutput = () => {\n\t\tlet completed = false;\n\t\tif (hasUpdates) {\n\t\t\thasUpdates = false;\n\t\t\tidleCount = 0;\n\t\t\tif (isFirstUpdate) {\n\t\t\t\tsendToAll(new ProgressMessage(0, 'Installing WSL components'));\n\t\t\t\tisFirstUpdate = false;\n\t\t\t}\n\t\t} else {\n\t\t\tidleCount++;\n\t\t\tif (idleCount > INACTIVITY_LIMIT / POLLING_TIME) {\n\t\t\t\thandleError(`VS Code Server for WSL failed to start. No messages received for ${Math.floor(INACTIVITY_LIMIT / 1000)}s`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (stdout.length) {\n\t\t\tsendToAll(new StdoutMessage(stdout));\n\t\t\tcompleted = detectServerStarted(stdout);\n\t\t\tstdout = '';\n\t\t}\n\t\tif (stderr.length) {\n\t\t\tsendToAll(new StderrMessage(stderr));\n\t\t\tstderr = '';\n\t\t}\n\t\treturn completed;\n\t};\n\n\t// look regularly at the process output and fail if the process is idle for an extended time.\n\tlet stdout = '';\n\tlet stderr = '';\n\tlet hasUpdates = false;\n\tlet idleCount = 0;\n\tlet isFirstUpdate = true;\n\n\t// start observing the output\n\ttimer = setInterval(observeOutput, POLLING_TIME);\n\n\t// start VS Code Server in a WSL shell\n\tconst wslPath = getWSLExecutablePath();\n\tif (!wslPath || !fs.existsSync(wslPath)) {\n\t\thandleError(`VS Code Server for WSL failed. '${wslPath}' not found.\\n\\nMake sure WSL is installed:\\nhttps://aka.ms/vscode-remote/wsl/install-wsl`);\n\t\treturn;\n\t}\n\tconst { commit, quality } = getProductConfiguration(VSCODE_WSL_APP_ROOT);\n\tif (commit && !quality) {\n\t\thandleError(`VSCode Client (${VSCODE_WSL_APP_ROOT}) does not define a quality.`);\n\t\treturn;\n\t}\n\tconst dataFolder = '.vscode-remote';\n\tconst inspect = AGENT_DEBUG_PORT ? `--inspect=0.0.0.0:${AGENT_DEBUG_PORT}` : '';\n\tconst telemetry = VSCODE_WSL_ENABLE_TELEMETRY ? '' : '--disable-telemetry';\n\tconst commandLine = commit ? `\"./scripts/wslServer.sh ${commit} ${quality} ${dataFolder} ${inspect} ${telemetry}\"` : `\"./scripts/wslServer-dev.sh '${VSCODE_WSL_APP_ROOT}' ${inspect}\"`;\n\tconst commandArgs = wslPath.endsWith('wsl.exe') ? ['bash', '-i', '-c', commandLine] : ['-i', '-c', commandLine];\n\tsendToAll(new StdoutMessage(`Launching ${wslPath} ${commandArgs.join(' ')} in ${VSCODE_WSL_EXT_LOCATION}`));\n\n\tconst extHostProcess = cp.spawn(wslPath, commandArgs, { cwd: VSCODE_WSL_EXT_LOCATION, windowsVerbatimArguments: true });\n\n\textHostProcess.stdout.on('data', (data: Buffer) => {\n\t\tstdout = stdout + data.toString();\n\t\thasUpdates = true;\n\t});\n\textHostProcess.stderr.on('data', (data: Buffer) => {\n\t\tstderr = stderr + data.toString();\n\t\thasUpdates = true;\n\t});\n\textHostProcess.on('error', (error: Error) => {\n\t\tif (!observeOutput()) {\n\t\t\thandleError(`VS Code Server for WSL failed with error:\\r\\n${error.message}`);\n\t\t}\n\t});\n\textHostProcess.on('close', (_: number) => {\n\t\tif (!observeOutput()) {\n\t\t\thandleError(`VS Code Server for WSL closed unexpectedly.`);\n\t\t}\n\t});\n});\n\nexport class SimpleProtocol {\n\n\tpublic onMessage: ((data: any) => void) | null;\n\tpublic onClose: (() => void) | null;\n\n\tprivate _byteProtocol: ByteProtocol;\n\n\tconstructor(socket: net.Socket) {\n\t\tthis.onMessage = null;\n\t\tthis.onClose = null;\n\n\t\tthis._byteProtocol = new ByteProtocol(socket);\n\t\tthis._byteProtocol.onClose = () => {\n\t\t\tif (this.onClose) {\n\t\t\t\tthis.onClose();\n\t\t\t}\n\t\t};\n\t\tthis._byteProtocol.onMessage = (data) => {\n\t\t\tif (!this.onMessage) {\n\t\t\t\tthrow new Error(`Incorrect usage!`);\n\t\t\t}\n\t\t\tthis.onMessage(JSON.parse(data.toString()));\n\t\t};\n\t}\n\n\tsend(msg: any): void {\n\t\tthis._byteProtocol.send(Buffer.from(JSON.stringify(msg)));\n\t}\n}\n\nexport class ByteProtocol {\n\n\tprivate static readonly _headerLen = 4;\n\n\tprivate _chunks: Buffer[];\n\n\tpublic onMessage: ((data: Buffer) => void) | null;\n\tpublic onClose: (() => void) | null;\n\n\tprivate _socketDataListener: (data: Buffer) => void;\n\tprivate _socketCloseListener: () => void;\n\n\tconstructor(private _socket: net.Socket) {\n\t\tthis._chunks = [];\n\n\t\tthis.onMessage = null;\n\t\tthis.onClose = null;\n\n\t\tlet totalLength = 0;\n\n\t\tconst state = {\n\t\t\treadHead: true,\n\t\t\tbodyLen: -1,\n\t\t};\n\n\t\tconst acceptChunk = (data: Buffer) => {\n\n\t\t\tthis._chunks.push(data);\n\t\t\ttotalLength += data.length;\n\n\t\t\twhile (totalLength > 0) {\n\n\t\t\t\tif (state.readHead) {\n\t\t\t\t\t// expecting header -> read 5bytes for header\n\t\t\t\t\t// information: `bodyIsJson` and `bodyLen`\n\t\t\t\t\tif (totalLength >= ByteProtocol._headerLen) {\n\t\t\t\t\t\tconst all = Buffer.concat(this._chunks);\n\n\t\t\t\t\t\tstate.bodyLen = all.readUInt32BE(0);\n\t\t\t\t\t\tstate.readHead = false;\n\n\t\t\t\t\t\tconst rest = all.slice(ByteProtocol._headerLen);\n\t\t\t\t\t\ttotalLength = rest.length;\n\t\t\t\t\t\tthis._chunks = [rest];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!state.readHead) {\n\t\t\t\t\t// expecting body -> read bodyLen-bytes for\n\t\t\t\t\t// the actual message or wait for more data\n\t\t\t\t\tif (totalLength >= state.bodyLen) {\n\n\t\t\t\t\t\tconst all = Buffer.concat(this._chunks);\n\t\t\t\t\t\tconst buffer = all.slice(0, state.bodyLen);\n\n\t\t\t\t\t\t// ensure the getBuffer returns a valid value if invoked from the event listeners\n\t\t\t\t\t\tconst rest = all.slice(state.bodyLen);\n\t\t\t\t\t\ttotalLength = rest.length;\n\t\t\t\t\t\tthis._chunks = [rest];\n\n\t\t\t\t\t\tstate.bodyLen = -1;\n\t\t\t\t\t\tstate.readHead = true;\n\n\t\t\t\t\t\tif (!this.onMessage) {\n\t\t\t\t\t\t\tthrow new Error(`Incorrect usage!`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.onMessage(buffer);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._socketDataListener = acceptChunk;\n\t\t_socket.on('data', this._socketDataListener);\n\n\t\tthis._socketCloseListener = () => {\n\t\t\tif (this.onClose) {\n\t\t\t\tthis.onClose();\n\t\t\t}\n\t\t};\n\t\t_socket.once('close', this._socketCloseListener);\n\t}\n\n\tsend(buffer: Buffer): void {\n\t\tconst header = Buffer.allocUnsafe(ByteProtocol._headerLen);\n\t\theader.writeUInt32BE(buffer.length, 0, true);\n\t\tthis._writeSoon(header, buffer);\n\t}\n\n\tprivate _writeBuffer = new class {\n\n\t\tprivate _data: Buffer[] = [];\n\t\tprivate _totalLength = 0;\n\n\t\tadd(head: Buffer, body: Buffer): boolean {\n\t\t\tconst wasEmpty = this._totalLength === 0;\n\t\t\tthis._data.push(head, body);\n\t\t\tthis._totalLength += head.length + body.length;\n\t\t\treturn wasEmpty;\n\t\t}\n\n\t\ttake(): Buffer {\n\t\t\tconst ret = Buffer.concat(this._data, this._totalLength);\n\t\t\tthis._data.length = 0;\n\t\t\tthis._totalLength = 0;\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\tprivate _writeSoon(header: Buffer, data: Buffer): void {\n\t\tif (this._writeBuffer.add(header, data)) {\n\t\t\tsetImmediate(() => {\n\t\t\t\t// return early if socket has been destroyed in the meantime\n\t\t\t\tif (this._socket.destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t\t\t// anyways and nodejs is already doing that for us:\n\t\t\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t\t\t// > accept and buffer chunk even if it has not not been allowed to drain.\n\t\t\t\tthis._socket.write(this._writeBuffer.take());\n\t\t\t});\n\t\t}\n\t}\n}\n","module.exports = require(\"net\");"],"sourceRoot":""}